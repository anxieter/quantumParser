
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COMPLEX DO ELSE EQUAL FI ID IF LBRACKET MULTIEQUAL NUMBER OD RBRACKET SKIP THEN WHILESTATEMENTS : STATEMENTS STATEMENT\n                  | STATEMENTSTATEMENT : SKIPSTATEMENT : ID EQUAL NUMBERSTATEMENT : ID EQUAL MATRIXIDS : ID\n           | IDS COMMA IDSTATEMENT : IDS MULTIEQUAL ID MATRIX : LBRACKET ROWLIST RBRACKETROWLIST : ROWLIST COMMA ROWROWLIST : ROWROW : LBRACKET NUMBERLIST RBRACKETNUMBERLIST : NUMBER\n                 | COMPLEX\n                 | NUMBERLIST COMMA NUMBER\n                 | NUMBERLIST COMMA COMPLEXSTATEMENT : IF ID LBRACKET IDS RBRACKET EQUAL NUMBER THEN STATEMENTS ELSE STATEMENTS FISTATEMENT : WHILE ID LBRACKET IDS RBRACKET EQUAL NUMBER DO STATEMENTS OD'
    
_lr_action_items = {'SKIP':([0,1,2,3,8,14,15,17,30,43,44,45,46,47,48,49,50,],[3,3,-2,-3,-1,-4,-5,-8,-9,3,3,3,3,3,-18,3,-17,]),'ID':([0,1,2,3,6,7,8,10,11,14,15,17,19,20,30,43,44,45,46,47,48,49,50,],[4,4,-2,-3,12,13,-1,17,18,-4,-5,-8,24,24,-9,4,4,4,4,4,-18,4,-17,]),'IF':([0,1,2,3,8,14,15,17,30,43,44,45,46,47,48,49,50,],[6,6,-2,-3,-1,-4,-5,-8,-9,6,6,6,6,6,-18,6,-17,]),'WHILE':([0,1,2,3,8,14,15,17,30,43,44,45,46,47,48,49,50,],[7,7,-2,-3,-1,-4,-5,-8,-9,7,7,7,7,7,-18,7,-17,]),'$end':([1,2,3,8,14,15,17,30,48,50,],[0,-2,-3,-1,-4,-5,-8,-9,-18,-17,]),'ELSE':([2,3,8,14,15,17,30,45,48,50,],[-2,-3,-1,-4,-5,-8,-9,47,-18,-17,]),'OD':([2,3,8,14,15,17,30,46,48,50,],[-2,-3,-1,-4,-5,-8,-9,48,-18,-17,]),'FI':([2,3,8,14,15,17,30,48,49,50,],[-2,-3,-1,-4,-5,-8,-9,-18,50,-17,]),'EQUAL':([4,32,33,],[9,37,38,]),'MULTIEQUAL':([4,5,18,],[-6,10,-7,]),'COMMA':([4,5,18,22,23,24,25,26,27,28,29,34,36,39,40,],[-6,11,-7,31,-11,-6,11,11,35,-13,-14,-12,-10,-15,-16,]),'NUMBER':([9,21,35,37,38,],[14,28,39,41,42,]),'LBRACKET':([9,12,13,16,31,],[16,19,20,21,21,]),'RBRACKET':([18,22,23,24,25,26,27,28,29,34,36,39,40,],[-7,30,-11,-6,32,33,34,-13,-14,-12,-10,-15,-16,]),'COMPLEX':([21,35,],[29,40,]),'THEN':([41,],[43,]),'DO':([42,],[44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'STATEMENTS':([0,43,44,47,],[1,45,46,49,]),'STATEMENT':([0,1,43,44,45,46,47,49,],[2,8,2,2,8,8,2,8,]),'IDS':([0,1,19,20,43,44,45,46,47,49,],[5,5,25,26,5,5,5,5,5,5,]),'MATRIX':([9,],[15,]),'ROWLIST':([16,],[22,]),'ROW':([16,31,],[23,36,]),'NUMBERLIST':([21,],[27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> STATEMENTS","S'",1,None,None,None),
  ('STATEMENTS -> STATEMENTS STATEMENT','STATEMENTS',2,'p_statements','lexer.py',80),
  ('STATEMENTS -> STATEMENT','STATEMENTS',1,'p_statements','lexer.py',81),
  ('STATEMENT -> SKIP','STATEMENT',1,'p_statement_skip','lexer.py',88),
  ('STATEMENT -> ID EQUAL NUMBER','STATEMENT',3,'p_statement_assign','lexer.py',92),
  ('STATEMENT -> ID EQUAL MATRIX','STATEMENT',3,'p_statement_mat_assign','lexer.py',96),
  ('IDS -> ID','IDS',1,'p_multiple_IDs','lexer.py',100),
  ('IDS -> IDS COMMA ID','IDS',3,'p_multiple_IDs','lexer.py',101),
  ('STATEMENT -> IDS MULTIEQUAL ID','STATEMENT',3,'p_statement_unitary','lexer.py',108),
  ('MATRIX -> LBRACKET ROWLIST RBRACKET','MATRIX',3,'p_MATRIX','lexer.py',112),
  ('ROWLIST -> ROWLIST COMMA ROW','ROWLIST',3,'p_ROWLIST_multiple','lexer.py',116),
  ('ROWLIST -> ROW','ROWLIST',1,'p_ROWLIST_single','lexer.py',120),
  ('ROW -> LBRACKET NUMBERLIST RBRACKET','ROW',3,'p_ROW','lexer.py',124),
  ('NUMBERLIST -> NUMBER','NUMBERLIST',1,'p_NUMBERLIST','lexer.py',128),
  ('NUMBERLIST -> COMPLEX','NUMBERLIST',1,'p_NUMBERLIST','lexer.py',129),
  ('NUMBERLIST -> NUMBERLIST COMMA NUMBER','NUMBERLIST',3,'p_NUMBERLIST','lexer.py',130),
  ('NUMBERLIST -> NUMBERLIST COMMA COMPLEX','NUMBERLIST',3,'p_NUMBERLIST','lexer.py',131),
  ('STATEMENT -> IF ID LBRACKET IDS RBRACKET EQUAL NUMBER THEN STATEMENTS ELSE STATEMENTS FI','STATEMENT',12,'p_statement_if','lexer.py',138),
  ('STATEMENT -> WHILE ID LBRACKET IDS RBRACKET EQUAL NUMBER DO STATEMENTS OD','STATEMENT',10,'p_statement_while','lexer.py',141),
]
